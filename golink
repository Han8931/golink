#!/bin/bash

# Default configuration and file paths
urls_file="$HOME/.dotfiles/urls.txt"
config_file="$HOME/.dotfiles/golink_config"

# Load existing configuration or set default
load_config() {
    if [ -f "$config_file" ]; then
        source "$config_file"
    else
        # Default browser setting if configuration file does not exist
        echo "browser=firefox" > "$config_file"
        browser="firefox"
    fi
}

# Save configuration settings
save_config() {
    echo "browser=$browser" > "$config_file"
}

# Function to add a new URL
add_url() {
    local name="$1"
    local new_url="$2"
    echo "$name $new_url" >> "$urls_file"
    echo "Added $name with URL $new_url to $urls_file"
}

# Parse command line options
while getopts ":a:b:" opt; do
  case $opt in
    a)
      # Splitting the optarg to get name and url
      IFS=' ' read -ra ADDR <<< "${OPTARG}"
      if [ ${#ADDR[@]} -eq 2 ]; then
        add_url "${ADDR[0]}" "${ADDR[1]}"
      else
        echo "Usage: -a 'name url'"
        exit 1
      fi
      exit 0
      ;;
    b)
      browser="${OPTARG}"
      save_config  # Save new browser setting
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))

# Initialize configuration and browser choice
load_config

# Extract choices from urls.txt
choices=$(awk '{print $1}' "$urls_file" | tr '\n' '\0')

# Use dmenu to present choices to the user
chosen=$(echo -ne "$choices" | dmenu -i -p "Go to ...")

# Ensure chosen is not empty
if [ -z "$chosen" ]; then
  echo "No option was chosen." >&2
  exit 1
fi

# Extract the URL corresponding to the chosen option
url=$(awk -v chosen="$chosen" '$1 == chosen {print $2}' "$urls_file")

# Determine if the URL expects search terms by looking for "="
if echo "$url" | grep -q "="; then
    # Prompt for search terms if applicable
    search_terms=$(dmenu -p "Enter search terms:")
    encoded_terms=$(echo "$search_terms" | sed -e 's/ /+/g')
    full_url="${url}${encoded_terms}"
else
    # Use the base URL if no search terms needed
    full_url="$url"
fi

# Open the full URL in the browser
$browser "$full_url" >/dev/null 2>&1
